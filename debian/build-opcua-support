#!/bin/sh
# Helper script to build OPC UA Device Support and create the binary distribution module

# Environment
# WORKDIR           root of work area
# EPICS_VERSIONS    space separated list of EPICS Base versions
# OPCUA_VERSION     OPC UA device support version to build
# DISTRO            distribution tag (for artifact name)


for v in ${EPICS_VERSIONS}; do
    echo Building OPCUA ${OPCUA_VERSION} for EPICS Base ${v}

    cd ${WORKDIR}/${v}
    # get and compile OPCUA Support
    curl -L https://github.com/epics-modules/opcua/archive/refs/tags/v${OPCUA_VERSION}.tar.gz | tar xzf -
    mv opcua-${OPCUA_VERSION} opcua
    # workaround: unit tests don't compile using EMBED
    mv opcua/unitTestApp opcua/unitTestAppNO

    # copy the example application
    cp -a opcua/exampleTop binaryOpcuaIoc
    ( cd binaryOpcuaIoc; patch -p1 < ../../example2static.patch )

    make -j2 -C opcua

    # strip symbols from shared library
    MAJ="$(echo $OPCUA_VERSION | cut -d'.' -f1)"
    MIN="$(echo $OPCUA_VERSION | cut -d'.' -f2)"
    LIBRARY="opcua/lib/linux-x86_64/libopcua.so.$MAJ.$MIN"
    chmod +w $LIBRARY
    strip --strip-all --discard-all $LIBRARY
    chmod -w $LIBRARY

    # copy binary distribution
    cp -af opcua/dbd/*.dbd binaryOpcuaIoc/opcuaIocApp/
    cp -af opcua/lib/linux-x86_64/libopcua.so* binaryOpcuaIoc/opcuaIocApp/
    
    # create TAR
    TARFILE=IOC_opcua-${OPCUA_VERSION}_Base-${v}_${DISTRO}.tar.gz
    tar czvf $TARFILE binaryOpcuaIoc
    mv $TARFILE /result/
done
